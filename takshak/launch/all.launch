<launch>

  <!-- Gazebo parameters -->
  <arg name="world" default="empty"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Launch World 1 -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find takshak)/worlds/world1.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Spawn Robot model -->
  <arg name="x" value="11.5"/>
  <arg name="y" value="-6.2"/>
  <arg name="z" value="0.0"/>
  <arg name="roll" value="0.0"/>
  <arg name="pitch" value="0.0"/>
  <arg name="yaw" value="3.14"/>
  <param name="robot_description" command="cat '$(find takshak)/models/husky_robot_model/model.urdf'"/>

  <node name="husky_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
    args="-urdf -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model husky" />
  
  <!-- Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- Spawn aruco markers -->
  <node pkg="takshak" name="spawn_marker" type="spawn_marker.py" output="screen" />
 
  <arg name="image_topic" default="/camera/color/image_raw" />

    <node name="cmvision" pkg="cmvision" type="cmvision" output="screen">
        <remap from="image" to="$(arg image_topic)"/>

        <!-- Location of the cmvision color file -->
        <param name="color_file" type="string" value="$(find cmvision)/config/colors.txt" />

        <!-- Turn debug output on or off -->
        <param name="debug_on" type="bool" value="true"/>

        <!-- Turn color calibration on or off -->
        <param name="color_cal_on" type="bool" value="false"/>

        <!-- Enable Mean shift filtering -->
        <param name="mean_shift_on" type="bool" value="false"/>

        <!-- Spatial bandwidth: Bigger = smoother image -->
        <param name="spatial_radius_pix" type="double" value="2.0"/>

        <!-- Color bandwidth: Bigger = smoother image-->
        <param name="color_radius_pix" type="double" value="40.0"/>
    </node>



  <!-- ********************************************************************************************* -->
 
  <node name="map_server" pkg="map_server" type="map_server" args="$(find my_gmapping_launcher)/config/slam_map.yaml">
    <param name="frame_id" value="map"/>
  </node>

  <!-- ********************************************************************************************* -->




  <arg name="use_map_topic"   default="false"/>
  <arg name="scan_topic"      default="/laser/scan"/> 
  <arg name="initial_pose_x"  default="0.0"/>
  <arg name="initial_pose_y"  default="0.0"/>
  <arg name="initial_pose_a"  default="0.0"/>
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="husky_robot_model__base_link"/>
  <arg name="global_frame_id" default="map"/>

  <node pkg="amcl" type="amcl" name="amcl">
    <param name="use_map_topic"             value="$(arg use_map_topic)"/>
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha5"               value="0.1"/>
    <param name="gui_publish_rate"          value="10.0"/>
    <param name="laser_max_beams"             value="60"/>
    <param name="laser_max_range"           value="12.0"/>
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="2000"/>
    <param name="kld_err"                   value="0.05"/>
    <param name="kld_z"                     value="0.99"/>
    <param name="odom_alpha1"               value="0.2"/>
    <param name="odom_alpha2"               value="0.2"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3"               value="0.2"/>
    <param name="odom_alpha4"               value="0.2"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_model_type"          value="likelihood_field"/>
    <!-- <param name="laser_model_type" value="beam"/> -->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="update_min_d"              value="0.25"/>
    <param name="update_min_a"              value="0.2"/>
    <param name="odom_frame_id"             value="$(arg odom_frame_id)"/> 
    <param name="base_frame_id"             value="$(arg base_frame_id)"/> 
    <param name="global_frame_id"           value="$(arg global_frame_id)"/>
    <param name="resample_interval"         value="1"/>
    <!-- Increase tolerance because the computer can get quite busy -->
    <param name="transform_tolerance"       value="0.3"/>
    <param name="recovery_alpha_slow"       value="0.0"/>
    <param name="recovery_alpha_fast"       value="0.0"/>
    <param name="initial_pose_x"            value="11.5"/>
    <param name="initial_pose_y"            value="-6.2"/>
    <param name="initial_pose_a"            value="3.14"/>
    <remap from="scan"                      to="$(arg scan_topic)"/>
  </node>



    <!-- ********************************************************************************************* -->



  <arg name="no_static_map" default="false"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find my_move_base)/param/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find my_move_base)/param/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find my_move_base)/param/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find my_move_base)/param/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find my_move_base)/param/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find my_move_base)/param/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
  </node>



    <!-- ********************************************************************************************* -->


  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find takshak)/rviz/takshak.rviz"/>
</launch>
